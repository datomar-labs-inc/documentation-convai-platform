(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{120:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var r=n(1),a=(n(0),n(145)),o=n(147);const c={id:"add-channel-user",title:"Add Channel User Node",sidebar_label:"Add Channel User Node"},i={id:"nodes/stock/add-channel-user",title:"Add Channel User Node",description:"import useBaseUrl from '@docusaurus/useBaseUrl';",source:"@site/docs/nodes/stock/add-channel-user.md",permalink:"/documentation-convai-platform/docs/nodes/stock/add-channel-user",editUrl:"https://github.com/datomar-labs-inc/documentation-convai-platform/docs/nodes/stock/add-channel-user.md",sidebar_label:"Add Channel User Node",sidebar:"someSidebar",previous:{title:"One Time Broadcast Node",permalink:"/documentation-convai-platform/docs/nodes/stock/one-time-broadcast"},next:{title:"Merge Users Node",permalink:"/documentation-convai-platform/docs/nodes/stock/merge-users"}},l=[{value:"Usage",id:"usage",children:[]},{value:"Steps:",id:"steps",children:[]},{value:"Configuration",id:"configuration",children:[]}],s={rightToc:l};function b({components:e,...t}){return Object(a.b)("wrapper",Object(r.a)({},s,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("p",null,"The Add Channel User node is used to add another channel for an existing user. For example, let's assume a user is talking to the bot on messenger and they provide their phone number. Now in order to reach them via sms in future, you can add a channel for them and save it."),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},Object(a.b)("strong",{parentName:"em"},"It is important to note that Add Channel User automatically adds the new channel in the same Super User so we don't need to use the Merge Users node."))),Object(a.b)("h2",{id:"steps"},"Steps:"),Object(a.b)("p",null,"In order to understand the full flow, we currently have the following setup."),Object(a.b)("img",{alt:"One Time Broadcast Node explained",src:Object(o.a)("img/nodes/stock/add-channel-user/1.png")}),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Add a response node to ask for user phone number"),Object(a.b)("img",{alt:"Response to ask phone number",src:Object(o.a)("img/nodes/stock/add-channel-user/2.png")})),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Add an input node to gather the user response.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Assuming that we are using NLP to capture and define the phone number, if the user response doesn't have a proper phone number, we fallback it to get the phone number again.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"If a phone number is provided, we attempt to add the Twilio SMS user."))),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'{{ d "phone-number" }}\n')),Object(a.b)("img",{alt:"Response to ask phone number",src:Object(o.a)("img/nodes/stock/add-channel-user/3.png")}),Object(a.b)("ol",{start:5},Object(a.b)("li",{parentName:"ol"},Object(a.b)("em",{parentName:"li"},"Bonus")," - Twilio SMS will return an error which we can capture and fallback to a user response. This can be in cases where user mentions an arbitrary phone number like 1234567890.")),Object(a.b)("h2",{id:"configuration"},"Configuration"),Object(a.b)("p",null,"The configuration of the node is as defined below:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Required"),Object(a.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Title"),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Required"),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"The title of the node")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Channel"),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Required"),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"The channel to be added")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Script Editor"),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Required"),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Script to extract the data for the specific channel (Ex. Phone number for Twilio SMS)")))))}b.isMDXComponent=!0},145:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),b=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},d=function(e){var t=b(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=b(n),p=r,m=d["".concat(c,".").concat(p)]||d[p]||u[p]||o;return n?a.a.createElement(m,i({ref:t},s,{components:n})):a.a.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},146:function(e,t,n){"use strict";var r=n(0),a=n(32);t.a=function(){return Object(r.useContext)(a.a)}},147:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(146);function a(e){const{siteConfig:t}=Object(r.a)(),{baseUrl:n="/"}=t||{};if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?n+e.slice(1):n+e}}}]);