(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{188:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var i=n(1),a=n(9),o=(n(0),n(269)),s=n(271),r={id:"building-a-bot",title:"Building a bot with Convai",sidebar_label:"2. Building a bot",description:"Step by step guide to make your first simple bot on Convai Studio"},c={id:"convai-studio/simple-bot/building-a-bot",title:"Building a bot with Convai",description:"Step by step guide to make your first simple bot on Convai Studio",source:"@site/docs/convai-studio/simple-bot/building-a-bot.mdx",permalink:"/convai-studio/simple-bot/building-a-bot",sidebar_label:"2. Building a bot",sidebar:"someSidebar",previous:{title:"Understanding Convai",permalink:"/convai-studio/simple-bot/understanding-convai"},next:{title:"Adding Fallback - Enhancing User Experience",permalink:"/convai-studio/simple-bot/adding-fallback"}},l=[{value:"Creating the bot",id:"creating-the-bot",children:[]},{value:"Connecting NLP",id:"connecting-nlp",children:[]},{value:"Adding Analytics",id:"adding-analytics",children:[]},{value:"Asking a single question functionality",id:"asking-a-single-question-functionality",children:[]},{value:"Creating a quiz challenge functionality",id:"creating-a-quiz-challenge-functionality",children:[]},{value:"Get points functionality",id:"get-points-functionality",children:[]},{value:"Welcome/Greet Module",id:"welcomegreet-module",children:[]},{value:"Final Product",id:"final-product",children:[]}],b={rightToc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"New to Convai? Start from ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"../understanding-convai"}),"Understanding Convai")," guide."),Object(o.b)("p",null,"In this tutorial we will be making a Trivia bot. We will be using Dialogflow's NLP, ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://opentdb.com/"}),"third-party API Service")," and Dashbot's Analytics. Let's start by creating a bot."),Object(o.b)("h2",{id:"creating-the-bot"},"Creating the bot"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Login to Convai Studio. Under Misc > Bots, click on the \u201cMake Bot\u201d Button to begin making your bot."),Object(o.b)("img",{alt:"make bot",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image78.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"In the name field enter \u201cTutorial Bot\u201d."),Object(o.b)("img",{alt:"create tutorial bot",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image103.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"After the bot is created, you will be taken to the bot\u2019s Dashboard by default. Click on the double right arrow button at the bottom of the left side panel to view different Side Navigation(we will refer to it as Nav by short) of this bot."),Object(o.b)("img",{alt:"nav collapsed",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image44.png")}),Object(o.b)("img",{alt:"nav expanded",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image29.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Go to Graph in the Nav. The majority of the work with your bot will take place here. You can zoom in/out using your mouse\u2019s wheel and left-click drag on empty space to move your view of the graph.."),Object(o.b)("img",{alt:"graph overview",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image66.png")}))),Object(o.b)("h2",{id:"connecting-nlp"},"Connecting NLP"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Let\u2019s add the NLP integration as a starting point. Here we will use DialogFlow as the bot\u2019s NLP. Use the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"/convai-studio/integrations/nlp/dialogflow"}),"DialogFlow Integrations")," guide to connect your Dialogflow bot to Convai.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Import this dataset to your Dialogflow Bot - ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"/ConvaiTutorial.zip"}),Object(o.b)("em",{parentName:"a"},"IMPORT ME IN DIALOGFLOW")))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Once you are done with that, go to Settings > Graph > Extension Graph to add the Dialogflow node."))),Object(o.b)("img",{alt:"go to extension",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image107.png")}),Object(o.b)("ol",{start:4},Object(o.b)("li",{parentName:"ol"},"Add the DialogFlow Node to the graph. Connect it between the Request Node and Main Node for NLP to function.")),Object(o.b)("img",{alt:"add dialogflow node",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image16.png")}),Object(o.b)("ol",{start:5},Object(o.b)("li",{parentName:"ol"},"Now you are able to use the NLP using the Intent Links anywhere in the bot. Intent links are like normal if/else loop. For example, if (intent == 'welcome') { goForward() }. When you join 2 nodes, click on the link and on the right, you will see a link config. Change the link type to intent and the choose the intent.")),Object(o.b)("img",{alt:"intent link",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image95.png")}),Object(o.b)("img",{alt:"select intent",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image80.png")}),Object(o.b)("h2",{id:"adding-analytics"},"Adding Analytics"),Object(o.b)("p",null,"Convai by itself has a Dashboard of Analytics, but you can use other chatbot analytics platform, such as Dashbot. In this section, we will use Dashbot integration to extend the Analytics in the bot."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Integrate Dashbot Analytics using the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"/convai-studio/integrations/analytics/dashbot"}),"Dashbot Integration")," guide.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"After you successfully integrated Dashbot. Go back to the bot\u2019s graph. Go to Extension Graph via Paginator."),Object(o.b)("p",{parentName:"li"},"Add a Dashbot Node by Context Menu and make the graph like below"),Object(o.b)("img",{alt:"add dashbot node",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image16.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"In Dashbot under the Integration Code Section, click View Reports to go to the Dashboard."),Object(o.b)("img",{alt:"view reports",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image34.png")}),Object(o.b)("img",{alt:"dashboard",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image62.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Back to Convai. Do some simple execution in the Dev Console."),Object(o.b)("img",{alt:"simple execution",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image27.png")}),Object(o.b)("p",{parentName:"li"},"In Dashbot dashboard, you can see that the Live Message Rate has changed, and in Recent Transcripts, there\u2019s a \u201cdev-console-...\u201d which means Dashbot has recorded the transcript of the Dev Console execution in Convai. The other one is the just the execution we tested for our Facebook integration."),Object(o.b)("img",{alt:"analytics",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image63.png")}))),Object(o.b)("h2",{id:"asking-a-single-question-functionality"},"Asking a single question functionality"),Object(o.b)("p",null,"In this section we will add the functionality to get and ask a single question from the user."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Go back to Graph > Main Graph. Create a Module from the Context Menu by right clicking anywhere on the graph"),Object(o.b)("img",{alt:"create module",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image47.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Rename the Module as \u201cGet Questions\u201d, and connect it to the Any Time System Node"),Object(o.b)("img",{alt:"rename module",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image33.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Click on the link, change the link type to Intent Link, select AskQuestion(DialogFlow) as the Intent. Any User Input from the Any Time Node that matches this intent will proceed to the Get Questions Module."),Object(o.b)("img",{alt:"select ask question intent",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image50.png")}),Object(o.b)("img",{alt:"graph of module and intent link",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image104.png")}),Object(o.b)("p",{parentName:"li"},"The AskQuestion Intent in DialogFlow looks like this:"),Object(o.b)("img",{alt:"ask question intent contents",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image75.png")}),Object(o.b)("p",{parentName:"li"},"The \u201ctriviacategory\u201d entity will be used in the script to call the Trivia API to get quiz questions in different categories. This parameter will be saved in the execution scope."),Object(o.b)("img",{alt:"triviacategory entity",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image35.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Double click on the Get Question Module to go inside its graph."),Object(o.b)("img",{alt:"get question graph",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image37.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Click on the Input Node and add a Module Variable like the following for the script to use. The qAmount variable will serve as the number of questions we want to get from the API."),Object(o.b)("img",{alt:"set mod var",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image15.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create a Script Node from Context Menu by Right Click > New Node > Stock > Script and rename it as \u201cGet Questions\u201d. Then link it to the Input Node of this Module."),Object(o.b)("p",{parentName:"li"},"Write the following code in the Script Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios');\n\nmodule.exports = async function main() {\n    try {\n        let amount = modvars.qAmount; //module variable\n        \n        //get triviacategory from Context Data\n        let category = ctx.get(\"triviacategory\"); \n        category = category || '';\n        \n        //set up the baseUrl for API call\n        let baseUrl = `https://opentdb.com/api.php?amount=${amount}&category=${category}`;\n        \n        let {data} = await axios.get(baseUrl);\n        let questions = data.results;\n        \n        //set Session Data questions equal to the result from API Call\n        setSession(\"questions\", questions)\n    } catch (e) {\n        console.error(e.message)\n    }\n}\n")),Object(o.b)("div",Object(i.a)({parentName:"li"},{className:"admonition admonition-tip"}),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("div",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(i.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(o.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"Note")),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Here we used ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://www.npmjs.com/package/axios"}),"AXIOS")," as the HTTP library to call the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://opentdb.com/api_config.php"}),"Open Trivia Database API")," to get Quiz questions and store data of questions in the Session Scope Data. Script in Script Node is basically JavaScript, you can use AXIOS or any other HTTP libraries to call external APIs. You can read the more about the script node here - ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"/convai-studio/nodes/stock/script"}),"Script Node"),".")))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Go to the Dev Console on the Right Side Panel (we will refer to it as Side Panel for short). Type \u201cAsk a film question\u201d and hit Enter. Click on View under the bot\u2019s response, scroll down a little bit to inspect the Session Data and the Entity we got from DialogFlow, that is what the Script Node did for us."),Object(o.b)("img",{alt:"get question exec",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image74.png")}),Object(o.b)("img",{alt:"triviacategory data",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image59.png")}),Object(o.b)("img",{alt:"question in session data",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image39.png")}),Object(o.b)("p",{parentName:"li"},"If the AskQuestion Intent does not match, session data will look like this"),Object(o.b)("img",{alt:"ask question intent no match",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image60.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"We have the Get Question Module Ready, let\u2019s add another Module named \u201cAsk Question\u201d on the Main Graph, connect it after the Get Question Module. Double click to enter its graph. "),Object(o.b)("img",{alt:"add ask question module",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image105.png")}),Object(o.b)("p",{parentName:"li"},"Make the module's graph like below. Here the:"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Format Question, Validate Answer and Update Points are Script Nodes."),Object(o.b)("li",{parentName:"ul"},"Question, Correct and Incorrect are Response Nodes."),Object(o.b)("li",{parentName:"ul"},"User Input is an Input Node."),Object(o.b)("li",{parentName:"ul"},"Delete Data is a Delete Data Node.")),Object(o.b)("img",{alt:"ask question module",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image42.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Edit the script of Format Question Script Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'  const _ = require(\'lodash\');\n\n  module.exports = async function main() {\n      try {\n          \n          //for challenge, save the index\n          let index = ctx.session.get("index");\n          let currentQuestion = {};\n          if(index === undefined){\n              index = 0;\n          }\n          \n          //get one question from Session Data\n          q = ctx.session.get(\'questions\')[index];\n          \n          let options = [];\n          \n          //set question type in Context Data\n          //multiple choice or true/false\n          if (q.type === "boolean") {\n              set("type", "tf");\n          } else {\n              set("type", "mc");\n          }\n          \n          options.push(q.correct_answer);\n          \n          q.incorrect_answers.forEach(o => options.push(o));\n      \n          //shuffle the answer options\n          options = _.shuffle(options);\n      \n          options.forEach((o, i) => {\n              if (o === q.correct_answer) {\n                  currentQuestion.correctIndex = i;\n              }\n          });\n          \n          //replace character code to character\n          question =  q.question.replace(/&amp;/g, "&").replace(/&quot;/g, "\'").replace(/&#039;/g, "\'");\n      \n          //put the currentQuestion things in one object\n          currentQuestion.options = options;\n          currentQuestion.question = question;\n          currentQuestion.correctAnswer = q.correct_answer;\n          \n          //set currentQuestion in Session Data\n          setSession("currentQuestion", currentQuestion);\n      } catch (e) {\n          console.log(e.message);\n      }\n      \n  }\n')),Object(o.b)("div",Object(i.a)({parentName:"li"},{className:"admonition admonition-tip"}),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("div",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(i.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(o.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"Note")),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Here we used the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://lodash.com/docs/4.17.15"}),"Lodash")," utility library to format quiz questions. As mentioned before, Script Node is just JavaScript, you can use any JavaScript features here.")))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Edit Question Response Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),'<response>\n    <message typing="1">\n    <text>{{ session.data.currentQuestion.question }}\n    {%- for op in session.data.currentQuestion.options -%}\n        {{- forloop.index -}}. {{ op }}\n    {% endfor %}\n    </text>\n    {% for op in session.data.currentQuestion.options %}\n        <qr value="{{ forloop.index | minus: 1 }}">{{ op }}</qr>\n    {% endfor %}\n    </message>\n</response>\n')),Object(o.b)("p",{parentName:"li"},"The Response Node is in ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://shopify.github.io/liquid/"}),"Liquid Template"),". The preview of this response will look like this:"),Object(o.b)("img",{alt:"response preview",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image91.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Edit Validate Answer Script Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'module.exports = async function main() {\n    //user input\n    txt = ctx.text.replace("%s+", "");\n    //correct index\n    correct = ctx.session.get("currentQuestion").correctIndex;\n    \n    if (txt == correct) {\n        set("correct", true);\n    } else {\n        set("incorrect", true);\n    }\n}\n'))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Edit Correct, Incorrect Response Nodes:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<response>\n    <message>\n        <text>Correct! Added 1 to your score.</text>\n    </message>\n</response>\n")),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<response>\n    <message>\n        <text>Incorrect! Subtracted 1 to your score.</text>\n    </message>\n</response>\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Edit Update Point Script Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'module.exports = async function main() {\n    //get point from User Data\n    point = ctx.user.get("point");\n    \n    //set point to 0 if it does not exist\n    if (point === undefined) {\n        point = 0;\n    }\n    \n    //get correct or incorrect from Context Data\n    if (ctx.get("correct")) {\n        point++;\n    }else if (ctx.get("incorrect")){\n        point--;\n    }\n    \n    //set point in User Data\n    setUser("point",point);\n}\n'))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Notice that Validate Answer Script Node has two links to two Response Nodes. We need to take some action on these links otherwise the flow of the graph will always go to the Correct Response Node."),Object(o.b)("p",{parentName:"li"},"  Review the script code in Validate Answers Script Node, it sets the execution scope variable \u201ccorrect\u201d to true if the answer is correct, otherwise it sets \u201cincorrect\u201d to true. We can take this as an advantage in Data Equals Link (Actually the Validate Answers Script Node is intended to do so). "),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'module.exports = async function main() {\n    //user input\n    txt = ctx.text.replace("%s+", "");\n    //correct index\n    correct = ctx.session.get("currentQuestion").correctIndex;\n    \n    if (txt == correct) {\n        set("correct", true);\n    } else {\n        set("incorrect", true);\n    }\n}\n')),Object(o.b)("p",{parentName:"li"},"  Set the link between Validate Answer Script Node and Correct Response Node to be Data Equals Link. Set Field Type as Data, Field Name as \u201ccorrect\u201d, Operation as Exists."),Object(o.b)("img",{alt:"correct link",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image88.png")}),Object(o.b)("p",{parentName:"li"},"  Set the link between Validate Answer Script Node and Incorrect Response Node to be Data Equals Link. Set Field Type as Data, Field Name as \u201cincorrect\u201d, Operation as Exists."),Object(o.b)("img",{alt:"incorrect link",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image30.png")}),Object(o.b)("p",{parentName:"li"},"  After the bot updates the user\u2019s point, the stored quiz questions in Session Data are no longer useful. These data should be deleted (clean up). So we add a Delete Data Node at the end of this Module."),Object(o.b)("img",{alt:"delete current question",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image3.png")}),Object(o.b)("p",{parentName:"li"},"  Back to the Main Graph, add a Delete Data Node after the Ask Questions Module."),Object(o.b)("img",{alt:"delete current question",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image87.png")}),Object(o.b)("div",Object(i.a)({parentName:"li"},{className:"admonition admonition-info"}),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("div",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(i.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Note")),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"We will explain why we don\u2019t delete s.questions inside the Ask Questions Module in the next section."))),Object(o.b)("p",{parentName:"li"},"You can inspect that after the user answers the quiz question, questions stored in Session Data are cleared."),Object(o.b)("img",{alt:"session data before delete",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image40.png")}),Object(o.b)("img",{alt:"session data cleared",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image19.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Go to Dev Console in the Side Panel, send \u201cAsk a film question\u201d to the bot. The Bot will respond with the quiz question and you can play with it."),Object(o.b)("img",{alt:"execution result in this section",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image58.png")}))),Object(o.b)("p",null,"Congratulations, you have built your first Convai chatbot. In this section, you have learned how to use NLP via intent links, and how to call external APIs via Script Nodes. In the next section, we will enhance the bot by reusing the modules you created in this section, and give you an image on how convenient to develop a bot with Modules."),Object(o.b)("p",null,"The Main graph looks like this at the end of this section:"),Object(o.b)("img",{alt:"graph in this section",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image4.png")}),Object(o.b)("h2",{id:"creating-a-quiz-challenge-functionality"},"Creating a quiz challenge functionality"),Object(o.b)("p",null,"In this section, we are going to add a challenge feature which allows the user to answer ten quiz questions and show the user\u2019s final score. And a Get Point feature allows the user to get its points and reset it. And Finally, add a welcome message to give a hint to the user on how to interact with the bot."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"On the Main Graph, create a module named \u201cChallenge\u201d and connect it to Any Time System Node with Challenge intent Link, enter its graph."),Object(o.b)("img",{alt:"add challenge module",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image24.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Update the graph like below. Here:"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Challenge Starts and Final Score are Response Nodes"),Object(o.b)("li",{parentName:"ul"},"User Input is an Input Node"),Object(o.b)("li",{parentName:"ul"},"Get Questions and Ask Question are modules"),Object(o.b)("li",{parentName:"ul"},"Set Loop Index is a Set Data Node"),Object(o.b)("li",{parentName:"ul"},"Index++ is a Script Node"),Object(o.b)("li",{parentName:"ul"},"Delete Data is a Delete Data Node")),Object(o.b)("img",{alt:"challenge module graph",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image14.png")}),Object(o.b)("p",{parentName:"li"},"Notice that we are reusing the module we created before - Get Questions and Ask Question Module (Modules has an icon on its top-left corner). When you develop your own bot, think carefully about how to modularize your bot functionalities so that you can reuse them anywhere you need, this makes the development process very flexible.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Edit the Challenge Starts Response Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<response>\n    <message>\n        <text>Let's start the challenge!</text>\n    </message>\n</response>\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Remember in the Main graph, the Get Questions Module is connected to the Any Time system Node with AskQuestion intent link. Think Any Time Node as a User Input Node. Therefore, set the link between the User Input Node and Get Questions Module to be AskQuestion intent link."),Object(o.b)("img",{alt:"set ask question intent link",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image25.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Click on the Get Questions Module, edit its module variable \u201cqAmount\u201d to 10 in order to get 10 questions from the Trivia API."),Object(o.b)("img",{alt:"set qAmount to 10",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image100.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"We have got 10 quiz questions from the Get Questions Module, then we need the user to answer these 10 questions. However, the Ask Question Module only asks and lets the user answer one question. Using a loop to loop 10 times of the Ask Question Module is a straightforward strategy here."),Object(o.b)("p",{parentName:"li"},"Edit the Set Loop Index Set Data Node:"),Object(o.b)("img",{alt:"set loop index",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image2.png")}),Object(o.b)("p",{parentName:"li"},"Edit Index++ Script Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'module.exports = async function main() {\n    //get index from Session Data\n    let index = ctx.session.get("index");\n    index++;\n    //set index in Session Data\n    setSession("index",index);\n}\n'))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"We need to determine when the loop is finished by using Data Equals Link."),Object(o.b)("img",{alt:"end loop",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image43.png")}),Object(o.b)("p",{parentName:"li"},"This loop can be illustrated in the following pseudo-code"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),"index = 0 // Set Loop Index Node\nstart loop\n    Ask Questions\n    index++  // Index++ Node\n    if (index == 10)\n        end loop \n-> Delete Data Node\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Edit Delete Data Node:"),Object(o.b)("img",{alt:"delete index and questions",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image61.png")}),Object(o.b)("p",{parentName:"li"},"Remember that we have deleted s.currentQuestions inside the Ask Question Module, if we delete s.questions we got from the API call in that module then we are not able to make the bot ask the next 9 questions in the Challenge Module. So we delete s.questions outside of the Ask Question Module.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Edit Final Score Response Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<response>\n    <message>\n        <text>You have finished the challenge. Your final score is: {{user.data.point}}</text>\n    </message>\n</response>\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"The execution of Challenge Module:"),Object(o.b)("img",{alt:"challenge module execution",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image1.gif")}))),Object(o.b)("h2",{id:"get-points-functionality"},"Get points functionality"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"We have the Challenge Module ready, now we need a Get Point Module for the user to get its score or reset it. Create this Module on the Main graph and connect it to Any Time system Node with GetPoints intent link."),Object(o.b)("img",{alt:"add get points",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image36.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Inside the module, create the graph. Here:"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Your Score, Continue and Reseted Point are Response Nodes"),Object(o.b)("li",{parentName:"ul"},"User Input is an Input Node"),Object(o.b)("li",{parentName:"ul"},"Reset Point is a Set Data Node")),Object(o.b)("img",{alt:"get points graph",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image23.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Edit Your Score Response Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<response>\n    <message>\n        <text>Your Score is: {{user.data.point}}. Do you want to reset your score to Zero?\n        </text>\n    </message>\n</response>\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"This Response Prompts the user to reset its point or not. Use Affirm intent link to ensure that the flow goes to Reset Point Node if the user confirms to reset its point. Otherwise prompt a Continue message."),Object(o.b)("img",{alt:"continue or reset",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image97.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Edit Reset Point Set Data Node:"),Object(o.b)("img",{alt:"reset point",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image69.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Edit Continue Response Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<response>\n    <message>\n        <text>You can continue on what you want to do.</text>\n    </message>\n</response>\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Edit Reseted Point Response Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<response>\n    <message>\n        <text>Your score is set to Zero!</text>\n    </message>\n</response>\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"The execution of Get Point Module:"),Object(o.b)("img",{alt:"get point execution",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image84.png")}))),Object(o.b)("p",null,"The main functionalities of this bot is set. But we do need a welcome message. A user is new to this bot, and has completely no idea how this bot works. Welcome message is an essential tool."),Object(o.b)("h2",{id:"welcomegreet-module"},"Welcome/Greet Module"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create the Welcome Response Node, link it to Start and Any Time System Node with Welcome intent link."),Object(o.b)("img",{alt:"add welcome",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image55.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Edit the Welcome Response Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<response>\n    <message>\n        <text>Hi I am the trivia bot. How can I help you?</text>\n    </message>\n</response>\n")),Object(o.b)("p",{parentName:"li"},"This is just a demonstration of the welcome message, you can add more information to optimize user experience."))),Object(o.b)("h2",{id:"final-product"},"Final Product"),Object(o.b)("p",null,"Congratulations!!!! You have learned how to create a bot with NLP and External APIs, and how to use Modules to make your development process flexible. Let's enhance the user experience and add some more channels."),Object(o.b)("p",null,"The graph of the Tutorial Bot:"),Object(o.b)("img",{alt:"enhanced bot graph",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image83.png")}),Object(o.b)("p",null,"The overall execution of the Tutorial Bot:"),Object(o.b)("img",{alt:"overall execution",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image82.gif")}))}p.isMDXComponent=!0},269:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var i=n(0),a=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),b=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r({},t,{},e)),n},p=function(e){var t=b(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=Object(i.forwardRef)((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=b(n),m=i,u=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?a.a.createElement(u,r({ref:t},l,{components:n})):a.a.createElement(u,r({ref:t},l))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=m;var r={};for(var c in t)hasOwnProperty.call(t,c)&&(r[c]=t[c]);r.originalType=e,r.mdxType="string"==typeof e?e:i,s[1]=r;for(var l=2;l<o;l++)s[l]=n[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},270:function(e,t,n){"use strict";var i=n(0),a=n(49);t.a=function(){return Object(i.useContext)(a.a)}},271:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(272);var i=n(270);function a(e){var t=(Object(i.a)().siteConfig||{}).baseUrl,n=void 0===t?"/":t;if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?n+e.slice(1):n+e}},272:function(e,t,n){"use strict";var i=n(12),a=n(24),o=n(273),s="".startsWith;i(i.P+i.F*n(274)("startsWith"),"String",{startsWith:function(e){var t=o(this,e,"startsWith"),n=a(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),i=String(e);return s?s.call(t,i,n):t.slice(n,n+i.length)===i}})},273:function(e,t,n){var i=n(73),a=n(25);e.exports=function(e,t,n){if(i(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(a(e))}},274:function(e,t,n){var i=n(2)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[i]=!1,!"/./"[e](t)}catch(a){}}return!0}}}]);