(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{125:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return s})),t.d(r,"metadata",(function(){return c})),t.d(r,"rightToc",(function(){return o})),t.d(r,"default",(function(){return b}));var n=t(1),a=t(9),u=(t(0),t(201)),s={id:"query-users-reachable",title:"Query Users Reachable",sidebar_label:"Query Users Reachable"},c={id:"node-sdk/methods/query-users-reachable",title:"Query Users Reachable",description:"queryUsersReachable() method to used to get the number of users who are reachable for a certain user set. This user set is defined using [UserQuery](./../models/user-query). You can use the [build()](../classes/user-query-builder#public-build-userquery) method of [UserQueryBuilder](../classes/user-query-builder) to return a UserQuery.",source:"@site/docs/node-sdk/methods/query-users-reachable.md",permalink:"/docs/node-sdk/methods/query-users-reachable",editUrl:"https://github.com/datomar-labs-inc/documentation-convai-platform/docs/node-sdk/methods/query-users-reachable.md",sidebar_label:"Query Users Reachable",sidebar:"someSidebar",previous:{title:"Query Users",permalink:"/docs/node-sdk/methods/query-users"},next:{title:"Update Session",permalink:"/docs/node-sdk/methods/update-session"}},o=[{value:"Reference",id:"reference",children:[]}],l={rightToc:o};function b(e){var r=e.components,t=Object(a.a)(e,["components"]);return Object(u.b)("wrapper",Object(n.a)({},l,t,{components:r,mdxType:"MDXLayout"}),Object(u.b)("p",null,"queryUsersReachable() method to used to get the number of users who are reachable for a certain user set. This user set is defined using ",Object(u.b)("a",Object(n.a)({parentName:"p"},{href:"./../models/user-query"}),"UserQuery"),". You can use the ",Object(u.b)("a",Object(n.a)({parentName:"p"},{href:"../classes/user-query-builder#public-build-userquery"}),"build()")," method of ",Object(u.b)("a",Object(n.a)({parentName:"p"},{href:"../classes/user-query-builder"}),"UserQueryBuilder")," to return a UserQuery."),Object(u.b)("p",null,"The queryUsersReachable() returns a promise with the number of reachable users"),Object(u.b)("p",null,Object(u.b)("em",{parentName:"p"},Object(u.b)("strong",{parentName:"em"},"Note - All the queries use the data from the user scope for returning results."))),Object(u.b)("pre",null,Object(u.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const {ConvaiAPIClient, UserQueryBuilder, UserQueryMode} = require('convai-sdk');\n\nconst convai = new ConvaiAPIClient(API_KEY);\n\nconvai\n    .queryUsersReachable(new UserQueryBuilder(UserQueryMode.ALL).where('firstName').equals('John').build())\n    .then(count => console.log(count))\n    .catch(error => console.log(error));\n")),Object(u.b)("h4",{id:"example-response"},"Example Response"),Object(u.b)("pre",null,Object(u.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'{\n  "count": 2,\n}\n')),Object(u.b)("h2",{id:"reference"},"Reference"),Object(u.b)("h4",{id:"queryusersreachablequery-userquery-promiseuserqueryreachableresult"},Object(u.b)("inlineCode",{parentName:"h4"},"queryUsersReachable(query: UserQuery): Promise<UserQueryReachableResult>")),Object(u.b)("br",null),Object(u.b)("table",null,Object(u.b)("thead",{parentName:"table"},Object(u.b)("tr",{parentName:"thead"},Object(u.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(u.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(u.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Attribute"),Object(u.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(u.b)("tbody",{parentName:"table"},Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"query"),Object(u.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(u.b)("a",Object(n.a)({parentName:"td"},{href:"../models/user-query"}),"UserQuery")),Object(u.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"required"),Object(u.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Query to filter user records")))))}b.isMDXComponent=!0},201:function(e,r,t){"use strict";t.d(r,"a",(function(){return i})),t.d(r,"b",(function(){return m}));var n=t(0),a=t.n(n);function u(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){u(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},u=Object.keys(e);for(n=0;n<u.length;n++)t=u[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)t=u[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),b=function(e){var r=a.a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):c({},r,{},e)),t},i=function(e){var r=b(e.components);return a.a.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},p=Object(n.forwardRef)((function(e,r){var t=e.components,n=e.mdxType,u=e.originalType,s=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),i=b(t),p=n,m=i["".concat(s,".").concat(p)]||i[p]||d[p]||u;return t?a.a.createElement(m,c({ref:r},l,{components:t})):a.a.createElement(m,c({ref:r},l))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var u=t.length,s=new Array(u);s[0]=p;var c={};for(var o in r)hasOwnProperty.call(r,o)&&(c[o]=r[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,s[1]=c;for(var l=2;l<u;l++)s[l]=t[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);