(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{154:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return p}));var i=n(1),a=n(9),o=(n(0),n(227)),s=n(229),r={id:"build-bot-nlp-api",title:"Build a chat bot with NLP and use External APIs",sidebar_label:"Build a chat bot with NLP and use External APIs",description:"Step by step guide to make your first simple bot on Convai Studio"},c={id:"convai-studio/simple-bot/building-a-bot/build-bot-nlp-api",title:"Build a chat bot with NLP and use External APIs",description:"Step by step guide to make your first simple bot on Convai Studio",source:"@site/docs/convai-studio/simple-bot/building-a-bot/build-bot-nlp-api.mdx",permalink:"/convai-studio/simple-bot/building-a-bot/build-bot-nlp-api",sidebar_label:"Build a chat bot with NLP and use External APIs"},b=[],l={rightToc:b};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"We will start building a Chatbot with Convai using NLP and External APIs here."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Login to Convai Studio.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Click on the \u201cMake Bot\u201d Button to begin making your bot."),Object(o.b)("img",{alt:"make bot",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image78.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"In the name field enter \u201cTutorial Bot\u201d."),Object(o.b)("img",{alt:"create tutorial bot",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image103.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"After the bot is created, you will be taken to the bot\u2019s Dashboard by default. Click on the double right arrow button at the bottom of the left side panel to view different Side Navigation(we will refer to it as Nav by short) of this bot."),Object(o.b)("img",{alt:"nav collapsed",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image44.png")}),Object(o.b)("img",{alt:"nav expanded",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image29.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Go to Graph in the Nav. The majority of the work with your bot will take place here. You can zoom in/out using your mouse\u2019s wheel and left-click drag on empty space to move your view of the graph.."),Object(o.b)("img",{alt:"graph overview",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image66.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"In this tutorial we will be making a quiz bot that uses NLP and External API. Let\u2019s add the NLP integration as a starting point. Here we will use DialogFlow as the bot\u2019s NLP. You can always check the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"/convai-studio/integrations/nlp/dialogflow"}),"DialogFlow Integrations")," document if you don\u2019t understand what we are doing here. "),Object(o.b)("p",{parentName:"li"},"Go to Settings from Nav. "),Object(o.b)("img",{alt:"to settings",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image99.png")}),Object(o.b)("p",{parentName:"li"},"Under the Development Environment section, click on Edit"),Object(o.b)("img",{alt:"edit development",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image17.png")}),Object(o.b)("p",{parentName:"li"},"Scroll down to the bottom to find the Integrations section, select DialogFlow and then click on the DialogFlow Configuration, import the DialogFlow JSON file and click on Save."),Object(o.b)("img",{alt:"select dialogflow",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image57.png")}),Object(o.b)("img",{alt:"dialogflow selected",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image31.png")}),Object(o.b)("img",{alt:"dialogflow config",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image7.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"The bot\u2019s NLP Integration is set. Let\u2019s go back to the graph via Nav."),Object(o.b)("p",{parentName:"li"},"Go to Extension Graph by clicking on the Extension Paginator"),Object(o.b)("img",{alt:"go to extension",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image107.png")}),Object(o.b)("br",null),Object(o.b)("img",{alt:"extension graph",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image9.png")}),Object(o.b)("p",{parentName:"li"},"Add the DialogFlow Node to the graph. Connect it between the Request Node and Main Node for NLP to function."),Object(o.b)("img",{alt:"add dialogflow node",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image16.png")}),Object(o.b)("p",{parentName:"li"},"Now you are able to use NLP from Intent Links by selecting the DialogFlow intents"),Object(o.b)("img",{alt:"intent link",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image95.png")}),Object(o.b)("img",{alt:"select intent",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image80.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Back to the Main Graph by clicking the Paginator\nCreate a Module from the Context Menu by right clicking anywhere on the graph"),Object(o.b)("img",{alt:"create module",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image47.png")}),Object(o.b)("p",{parentName:"li"},"Rename the Module as \u201cGet Questions\u201d, and connect it to the Any Time System Node"),Object(o.b)("img",{alt:"rename module",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image33.png")}),Object(o.b)("p",{parentName:"li"},"Click on the link, change the link type to Intent Link, select AskQuestion(DialogFlow) as the Intent. Any User Input from the Any Time Node that matches this intent will proceed to the Get Questions Module."),Object(o.b)("img",{alt:"select ask question intent",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image50.png")}),Object(o.b)("img",{alt:"graph of module and intent link",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image104.png")}),Object(o.b)("p",{parentName:"li"},"The AskQuestion Intent in DialogFlow looks like this:"),Object(o.b)("img",{alt:"ask question intent contents",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image75.png")}),Object(o.b)("p",{parentName:"li"},"The \u201ctriviacategory\u201d entity will be used in the script to call the Trivia API to get quiz questions in different categories. This parameter will be saved in the execution scope."),Object(o.b)("img",{alt:"triviacategory entity",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image35.png")}),Object(o.b)("p",{parentName:"li"},"Double click on the Get Question Module to get inside its graph."),Object(o.b)("img",{alt:"get question graph",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image37.png")}),Object(o.b)("p",{parentName:"li"},"Click on the Input Node, add a Module Variable like the following for the script to use"),Object(o.b)("img",{alt:"set mod var",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image15.png")}),Object(o.b)("p",{parentName:"li"},"Create a Script Node from Context Menu and Rename it as \u201cGet Questions\u201d, link it to the Input Node of this Module."),Object(o.b)("img",{alt:"new node",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image38.png")}),Object(o.b)("img",{alt:"stock node",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image72.png")}),Object(o.b)("br",null),Object(o.b)("img",{alt:"script node",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image81.png")}),Object(o.b)("p",{parentName:"li"},"Fill the following code in the Script Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios');\n\nmodule.exports = async function main() {\n    try {\n        let amount = modvars.qAmount; //module variable\n        \n        //get triviacategory from Context Data\n        let category = ctx.get(\"triviacategory\"); \n        category = category || '';\n        \n        //set up the baseUrl for API call\n        let baseUrl = `https://opentdb.com/api.php?amount=${amount}&category=${category}`;\n        \n        let {data} = await axios.get(baseUrl);\n        let questions = data.results;\n        \n        //set Session Data questions equal to the result from API Call\n        setSession(\"questions\", questions)\n    } catch (e) {\n        console.error(e.message)\n    }\n}\n")),Object(o.b)("div",Object(i.a)({parentName:"li"},{className:"admonition admonition-tip"}),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("div",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(i.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(o.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"Note")),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Here we used ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://www.npmjs.com/package/axios"}),"AXIOS")," as the HTTP library to call the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://opentdb.com/api_config.php"}),"Open Trivia Database API")," to get Quiz questions and store data of questions in the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"./data-scope"}),"Session Scope Data"),". Script in Script Node is basically JavaScript, you can use AXIOS or any other HTTP libraries to call external APIs. You can read the document about ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"/convai-studio/nodes/stock/script"}),"Script Node")," if you want to know what the script does exactly here.")))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Go to the Dev Console on the Right Side Panel (we will refer to it as Side Panel for short). Type \u201cAsk a film question\u201d and hit Enter. Click on View under the bot\u2019s response, scroll down a little bit to inspect the Session Data and the Entity we got from DialogFlow, that is what the Script Node did for us."),Object(o.b)("img",{alt:"get question exec",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image74.png")}),Object(o.b)("img",{alt:"triviacategory data",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image59.png")}),Object(o.b)("img",{alt:"question in session data",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image39.png")}),Object(o.b)("p",{parentName:"li"},"If the AskQuestion Intent did not match, session data will look like this"),Object(o.b)("img",{alt:"ask question intent no match",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image60.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"We have the Get Question Module Ready, let\u2019s add another Module named \u201cAsk Question\u201d on the Main Graph, connect it after the Get Question Module. Double click to enter its graph. "),Object(o.b)("img",{alt:"add ask question module",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image105.png")}),Object(o.b)("p",{parentName:"li"},"Make the module's graph like below:"),Object(o.b)("img",{alt:"ask question module",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image42.png")}),Object(o.b)("p",{parentName:"li"},"Edit the script of Format Question Script Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'const _ = require(\'lodash\');\n\nmodule.exports = async function main() {\n    try {\n      \n        //for challenge, save the index\n        let index = ctx.session.get("index");\n        let currentQuestion = {};\n        if(index === undefined){\n            index = 0;\n        }\n        \n        //get one question from Session Data\n        q = ctx.session.get(\'questions\')[index];\n      \n        let options = [];\n      \n        //set question type in Context Data\n        //multiple choice or true/false\n        if (q.type === "boolean") {\n            set("type", "tf");\n        } else {\n            set("type", "mc");\n        }\n      \n        options.push(q.correct_answer);\n      \n        q.incorrect_answers.forEach(o => options.push(o));\n  \n        //shuffle the answer options\n        options = _.shuffle(options);\n  \n        options.forEach((o, i) => {\n            if (o === q.correct_answer) {\n                currentQuestion.correctIndex = i;\n            }\n        });\n      \n        //replace character code to character\n        question = _.replace(_.replace(q.question, "&quot;", \'"\'), "&", "&amp;");\n  \n        //put the currentQuestion things in one object\n        currentQuestion.options = options;\n        currentQuestion.question = question;\n        currentQuestion.correctAnswer = q.correct_answer;\n      \n        //set currentQuestion in Session Data\n        setSession("currentQuestion", currentQuestion);\n    } catch (e) {\n        console.log(e.message);\n    }\n}\n')),Object(o.b)("div",Object(i.a)({parentName:"li"},{className:"admonition admonition-tip"}),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("div",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(i.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(o.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"Note")),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Here we used the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://lodash.com/docs/4.17.15"}),"Lodash")," utility library to format quiz questions. As mentioned before, Script Node is just JavaScript, you can use any JavaScript features here."))),Object(o.b)("p",{parentName:"li"},"Edit Question Response Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),'<response>\n    <message typing="1">\n    <text>{{ session.data.question }}\n    {%- for op in session.data.options -%}\n                {{- forloop.index -}}. {{ op }}\n    {% endfor %}\n    </text>\n    {% for op in session.data.options %}\n                <qr value="{{ forloop.index | minus: 1 }}">{{ op }}</qr>\n        {% endfor %}\n    </message>\n</response>\n')),Object(o.b)("p",{parentName:"li"},"  The Response Node is in ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://shopify.github.io/liquid/"}),"Liquid Template"),". The preview of this response will look like this:"),Object(o.b)("img",{alt:"response preview",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image91.png")}),Object(o.b)("p",{parentName:"li"},"  Edit Validate Answer Script Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'module.exports = async function main() {\n    //user input\n    txt = ctx.text.replace("%s+", "");\n    //correct index\n    correct = ctx.session.get("currentQuestion").correctIndex;\n    \n    if (txt == correct) {\n        set("correct", true);\n    } else {\n        set("incorrect", true);\n    }\n}\n')),Object(o.b)("p",{parentName:"li"},"  Edit Correct, Incorrect Response Nodes:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<response>\n    <message>\n        <text>Correct! Added 1 to your score.</text>\n    </message>\n</response>\n")),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<response>\n    <message>\n        <text>Incorrect! Subtracted 1 to your score.</text>\n    </message>\n</response>\n")),Object(o.b)("p",{parentName:"li"},"  Edit Update Point Script Node:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'module.exports = async function main() {\n    //get point from User Data\n    point = ctx.user.get("point");\n    \n    //set point to 0 if it does not exist\n    if (point === undefined) {\n        point = 0;\n    }\n    \n    //get correct or incorrect from Context Data\n    if (ctx.get("correct")) {\n        point++;\n    }else if (ctx.get("incorrect")){\n        point--;\n    }else {\n        point += 0;\n    }\n    \n    //set point in User Data\n    setUser("point",point);\n}\n')),Object(o.b)("p",{parentName:"li"},"  Notice that Validate Answer Script Node has two links to two Response Nodes. We need to take some action on these links otherwise the flow of the graph will always go to the Correct Response Node."),Object(o.b)("p",{parentName:"li"},"  Review the script code in Validate Answers Script Node, it sets the execution scope variable \u201ccorrect\u201d to true if the answer is correct, otherwise it sets \u201cincorrect\u201d to true. We can take this as an advantage in Data Equals Link (Actually the Validate Answers Script Node is intended to do so). "),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'module.exports = async function main() {\n    //user input\n    txt = ctx.text.replace("%s+", "");\n    //correct index\n    correct = ctx.session.get("currentQuestion").correctIndex;\n    \n    if (txt == correct) {\n        set("correct", true);\n    } else {\n        set("incorrect", true);\n    }\n}\n')),Object(o.b)("p",{parentName:"li"},"  Set the link between Validate Answer Script Node and Correct Response Node to be Data Equals Link. Set Field Type as Data, Field Name as \u201ccorrect\u201d, Operation as Exists."),Object(o.b)("img",{alt:"correct link",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image88.png")}),Object(o.b)("p",{parentName:"li"},"  Set the link between Validate Answer Script Node and Incorrect Response Node to be Data Equals Link. Set Field Type as Data, Field Name as \u201cincorrect\u201d, Operation as Exists."),Object(o.b)("img",{alt:"incorrect link",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image30.png")}),Object(o.b)("p",{parentName:"li"},"  After the bot updates the user\u2019s point, the stored quiz questions in Session Data are no longer useful. These data should be deleted (clean up). So we add a Delete Data Node at the end of this Module."),Object(o.b)("img",{alt:"delete current question",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image3.png")}),Object(o.b)("p",{parentName:"li"},"  Back to the Main Graph, add a Delete Data Node after the Ask Questions Module."),Object(o.b)("img",{alt:"delete current question",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image87.png")}),Object(o.b)("div",Object(i.a)({parentName:"li"},{className:"admonition admonition-info"}),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("div",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(i.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Note")),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"We will explain why we don\u2019t delete s.questions inside the Ask Questions Module in the next section."))),Object(o.b)("p",{parentName:"li"},"You can inspect that after the user answers the quiz question, questions stored in Session Data are cleared."),Object(o.b)("img",{alt:"session data before delete",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image40.png")}),Object(o.b)("img",{alt:"session data cleared",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image19.png")})),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Go to Dev Console in the Side Panel, send \u201cAsk a film question\u201d to the bot. The Bot will respond with the quiz question and you can play with it."),Object(o.b)("img",{alt:"execution result in this section",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image58.png")}),Object(o.b)("p",{parentName:"li"},"Congratulations, you have built your first Convai chatbot. In this section, you have learned how to use NLP via intent links, and how to call external APIs via Script Nodes. In the next section, we will enhance the bot by reusing the modules you created in this section, and give you an image on how convenient to develop a bot with Modules."),Object(o.b)("p",{parentName:"li"},"The Main graph looks like this at the end of this section:"),Object(o.b)("img",{alt:"graph in this section",src:Object(s.a)("img/convai-studio/simple-bot/building-bot/image4.png")}))))}p.isMDXComponent=!0},227:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var i=n(0),a=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),l=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):r({},t,{},e)),n},p=function(e){var t=l(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=Object(i.forwardRef)((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=i,u=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?a.a.createElement(u,r({ref:t},b,{components:n})):a.a.createElement(u,r({ref:t},b))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=m;var r={};for(var c in t)hasOwnProperty.call(t,c)&&(r[c]=t[c]);r.originalType=e,r.mdxType="string"==typeof e?e:i,s[1]=r;for(var b=2;b<o;b++)s[b]=n[b];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},228:function(e,t,n){"use strict";var i=n(0),a=n(49);t.a=function(){return Object(i.useContext)(a.a)}},229:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(230);var i=n(228);function a(e){var t=(Object(i.a)().siteConfig||{}).baseUrl,n=void 0===t?"/":t;if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?n+e.slice(1):n+e}},230:function(e,t,n){"use strict";var i=n(12),a=n(24),o=n(231),s="".startsWith;i(i.P+i.F*n(232)("startsWith"),"String",{startsWith:function(e){var t=o(this,e,"startsWith"),n=a(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),i=String(e);return s?s.call(t,i,n):t.slice(n,n+i.length)===i}})},231:function(e,t,n){var i=n(73),a=n(25);e.exports=function(e,t,n){if(i(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(a(e))}},232:function(e,t,n){var i=n(2)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[i]=!1,!"/./"[e](t)}catch(a){}}return!0}}}]);