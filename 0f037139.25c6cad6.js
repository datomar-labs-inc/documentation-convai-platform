(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{162:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):b({},t,{},e)),n},s=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),s=u(n),p=r,m=s["".concat(o,".").concat(p)]||s[p]||d[p]||c;return n?a.a.createElement(m,b({ref:t},l,{components:n})):a.a.createElement(m,b({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=p;var b={};for(var i in t)hasOwnProperty.call(t,i)&&(b[i]=t[i]);b.originalType=e,b.mdxType="string"==typeof e?e:r,o[1]=b;for(var l=2;l<c;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},91:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return u}));var r=n(1),a=n(6),c=(n(0),n(162)),o={id:"query-executions",title:"Query Executions",sidebar_label:"Query Executions"},b={id:"node-sdk/methods/query-executions",title:"Query Executions",description:"Use the queryExecutions() method to query executions from the Convai bot. The queryExecutions() method returns a promise with an array of executions.",source:"@site/docs/node-sdk/methods/query-executions.md",permalink:"/documentation-convai-platform/docs/node-sdk/methods/query-executions",editUrl:"https://github.com/datomar-labs-inc/documentation-convai-platform/docs/node-sdk/methods/query-executions.md",sidebar_label:"Query Executions",sidebar:"someSidebar",previous:{title:"Query Users",permalink:"/documentation-convai-platform/docs/node-sdk/methods/query-users"},next:{title:"User Query Builder",permalink:"/documentation-convai-platform/docs/node-sdk/classes/user-query-builder"}},i=[{value:"Reference",id:"reference",children:[]}],l={rightToc:i};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Use the queryExecutions() method to query executions from the Convai bot. The queryExecutions() method returns a promise with an array of executions."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const {ConvaiAPIClient, ExecutionMatcher} = require('convai-sdk');\n\nconst convai = new ConvaiAPIClient(API_KEY);\n\nconvai\n    .queryExecutions(new ExecutionMatcher().where('userId').equals('ef44ad85-b97a-477b-b314-abcdefghijkl'))\n    .then(executions => console.log(executions));\n")),Object(c.b)("p",null,"To add multiple conditions you can stack them on the execution matcher. For example, if we want executions for a user from just the facebook channel"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"convai\n    .queryExecutions(new ExecutionMatcher().where('userId').equals('ef44ad85-b97a-477b-b314-abcdefghijkl').where('channel').equals('facebook'))\n    .then(executions => console.log(executions));\n")),Object(c.b)("p",null,"You can also negate a condition. For example, if we want all the executions for a user except for the facebook channel"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"convai\n    .queryExecutions(new ExecutionMatcher().where('userId').equals('ef44ad85-b97a-477b-b314-abcdefghijkl').where('channel').equals('facebook').not())\n    .then(executions => console.log(executions));\n")),Object(c.b)("h3",{id:"reference"},"Reference"),Object(c.b)("h4",{id:"execution-matcher-reference"},"Execution Matcher Reference"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Parameters"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Function"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"where()"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"key"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Intialize a query to be performed. This method handles the 'key' part of the query")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"not()"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Negate a condition")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"equals()"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"value"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Denotes that the return set from where 'key' is equal to 'value'")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"exists()"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Denotes that the execution data should have the where 'key'")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"hasPrefix()"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"value"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Denotes that the return set from the where 'key' starts with 'value'")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"between()"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"low, high, inclusive"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Denotes that the return set from the where 'key' should be between (low, high) for inclusive = false or ","[low, high]"," for inclusive = true")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"setLimit()"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"limit"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Set the limit on results")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"setOffset()"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"offset"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Set the offset on results")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"sortAsc()"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"field"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Sort the executions by the field in ascending order")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"sortDesc()"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"field"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Sort the executions by the field in descending order")))))}u.isMDXComponent=!0}}]);